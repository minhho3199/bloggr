{"ast":null,"code":"var _jsxFileName = \"/Users/minhho3199/Documents/Code/bloggr/client/src/components/LoginForm/LoginForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link, Redirect, useHistory } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport { Field, Formik } from \"formik\";\nimport { faLock, faUser } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { BackgroundContainer, ButtonContainer, Container, StyledButton, StyledCard, StyledForm, StyledInput, StyledLink, StyledNotification, Title } from \"./styles\";\nimport { resetLoginState, loginStart } from './loginSlice';\nimport Navbar from '../Navbar/Navbar'; // import history from '../../redux/history';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginForm = () => {\n  _s();\n\n  const loginState = useSelector(state => state.loginState);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(resetLoginState());\n  }, []);\n\n  if (\"usertoken\" in localStorage) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 10\n    }, this);\n  }\n\n  const initialValues = {\n    email: \"\",\n    password: \"\"\n  };\n  const validateSchema = Yup.object({\n    email: Yup.string().email(\"Invalid email format\").required(\"Email is required\"),\n    password: Yup.string().required(\"Password is required\")\n  });\n\n  function onSubmit(values) {\n    const payload = {\n      email: values.email,\n      password: values.password\n    };\n    dispatch(loginStart(payload));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(BackgroundContainer, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(StyledCard, {\n          children: [loginState.error && /*#__PURE__*/_jsxDEV(StyledNotification, {\n            title: loginState.error.message,\n            hideCloseButton: true,\n            icon: \"error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 8\n          }, this), loginState.isLoginSuccess && /*#__PURE__*/_jsxDEV(StyledNotification, {\n            title: \"Login successful. Redirecting...\",\n            hideCloseButton: true,\n            icon: \"success\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(Title, {\n            children: \"Sign In For Bloggr\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Formik, {\n            initialValues: initialValues,\n            validationSchema: validateSchema,\n            onSubmit: onSubmit,\n            children: ({\n              errors,\n              touched\n            }) => /*#__PURE__*/_jsxDEV(StyledForm, {\n              children: [/*#__PURE__*/_jsxDEV(Field, {\n                name: \"email\",\n                label: \"Email\",\n                as: StyledInput,\n                icon: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faUser\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 17\n                }, this),\n                error: errors.email && touched.email ? errors.email : null,\n                placeholder: \"Enter email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                name: \"password\",\n                label: \"Password\",\n                as: StyledInput,\n                icon: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faLock\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 17\n                }, this),\n                type: \"password\",\n                error: errors.password && touched.password ? errors.password : null,\n                placeholder: \"Enter password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(ButtonContainer, {\n                children: [/*#__PURE__*/_jsxDEV(StyledButton, {\n                  type: \"submit\",\n                  label: \"Sign In\",\n                  variant: \"brand\",\n                  disabled: loginState.isLoading\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(StyledLink, {\n                  to: \"/register\",\n                  children: /*#__PURE__*/_jsxDEV(StyledButton, {\n                    type: \"submit\",\n                    label: \"Register\",\n                    variant: \"neutral\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 12\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 11\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 10\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 3\n  }, this);\n};\n\n_s(LoginForm, \"XIHygbhLvZ4saEznn5Klz7XRv8o=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/minhho3199/Documents/Code/bloggr/client/src/components/LoginForm/LoginForm.jsx"],"names":["React","useEffect","useSelector","useDispatch","Link","Redirect","useHistory","Yup","Field","Formik","faLock","faUser","FontAwesomeIcon","BackgroundContainer","ButtonContainer","Container","StyledButton","StyledCard","StyledForm","StyledInput","StyledLink","StyledNotification","Title","resetLoginState","loginStart","Navbar","LoginForm","loginState","state","dispatch","localStorage","initialValues","email","password","validateSchema","object","string","required","onSubmit","values","payload","error","message","isLoginSuccess","errors","touched","isLoading"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { Link, Redirect, useHistory } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport { Field, Formik } from \"formik\";\nimport { faLock, faUser } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n\tBackgroundContainer,\n\tButtonContainer,\n\tContainer,\n\tStyledButton,\n\tStyledCard,\n\tStyledForm,\n\tStyledInput,\n\tStyledLink,\n\tStyledNotification,\n\tTitle\n} from \"./styles\";\nimport { resetLoginState, loginStart } from './loginSlice';\nimport Navbar from '../Navbar/Navbar';\n// import history from '../../redux/history';\n\n\nconst LoginForm = () => {\n\tconst loginState = useSelector(state => state.loginState);\n\tconst dispatch = useDispatch();\n\n\tuseEffect(() => {\n\t\tdispatch(resetLoginState());\n\t}, []);\n\n\tif (\"usertoken\" in localStorage) {\n\t\treturn <Redirect to=\"/home\" />;\n\t}\n\n\tconst initialValues = {\n\t\temail: \"\",\n\t\tpassword: \"\",\n\t}\n\n\tconst validateSchema = Yup.object({\n\t\temail: Yup.string().email(\"Invalid email format\").required(\"Email is required\"),\n\t\tpassword: Yup.string().required(\"Password is required\")\n\t});\n\n\tfunction onSubmit(values) {\n\t\tconst payload = {\n\t\t\temail: values.email,\n\t\t\tpassword: values.password\n\t\t};\n\t\tdispatch(loginStart(payload));\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<Navbar />\n\t\t\t<BackgroundContainer>\n\t\t\t\t<Container>\n\t\t\t\t\t<StyledCard>\n\t\t\t\t\t\t{loginState.error && (\n\t\t\t\t\t\t\t<StyledNotification title={loginState.error.message} hideCloseButton={true} icon=\"error\" />\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{loginState.isLoginSuccess && (\n\t\t\t\t\t\t\t<StyledNotification title=\"Login successful. Redirecting...\" hideCloseButton={true} icon=\"success\" />\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Title>Sign In For Bloggr</Title>\n\t\t\t\t\t\t<Formik initialValues={initialValues} validationSchema={validateSchema} onSubmit={onSubmit}>\n\t\t\t\t\t\t\t{({ errors, touched }) => (\n\t\t\t\t\t\t\t\t<StyledForm>\n\t\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Email\"\n\t\t\t\t\t\t\t\t\t\tas={StyledInput}\n\t\t\t\t\t\t\t\t\t\ticon={<FontAwesomeIcon icon={faUser} />}\n\t\t\t\t\t\t\t\t\t\terror={errors.email && touched.email ? errors.email : null}\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter email\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\t\t\t\t\tas={StyledInput}\n\t\t\t\t\t\t\t\t\t\ticon={<FontAwesomeIcon icon={faLock} />}\n\t\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\t\terror={errors.password && touched.password ? errors.password : null}\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter password\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<ButtonContainer>\n\t\t\t\t\t\t\t\t\t\t<StyledButton type=\"submit\" label=\"Sign In\" variant=\"brand\" disabled={loginState.isLoading} />\n\t\t\t\t\t\t\t\t\t\t<StyledLink to=\"/register\">\n\t\t\t\t\t\t\t\t\t\t\t<StyledButton type=\"submit\" label=\"Register\" variant=\"neutral\" />\n\t\t\t\t\t\t\t\t\t\t</StyledLink>\n\t\t\t\t\t\t\t\t\t</ButtonContainer>\n\t\t\t\t\t\t\t\t</StyledForm>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Formik>\n\t\t\t\t\t</StyledCard>\n\t\t\t\t</Container>\n\t\t\t</BackgroundContainer>\n\t\t</div>\n\n\t);\n}\n\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}