{"ast":null,"code":"var _jsxFileName = \"/Users/minhho3199/Documents/Code/bloggr/client/src/components/LoginForm/LoginForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport useStyles from \"./styles\";\nimport * as Yup from \"yup\";\nimport { Field, Formik, Form } from \"formik\";\nimport { faLock, faUser } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { BackgroundContainer, ButtonContainer, Container, NotificationContainer, ResendButton, StyledButton, StyledCard, StyledForm, StyledInput, StyledLink, StyledNotification, Title } from \"./styles\";\nimport { startLogin } from './loginSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginForm = () => {\n  _s();\n\n  // const classes = useStyles();\n  const loginState = useSelector(state => state.loginState);\n  const dispatch = useDispatch();\n\n  if (\"usertoken\" in localStorage) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 10\n    }, this);\n  } // useEffect(() => {\n  //     dispatch(resetLoginState());\n  //   }, [dispatch]);    \n\n\n  const initialValues = {\n    email: \"\",\n    password: \"\"\n  };\n  const validateSchema = Yup.object({\n    email: Yup.string().email(\"Invalid email format\").required(\"Email is required\"),\n    password: Yup.string().required(\"Password is required\")\n  });\n\n  function onSubmit(values) {\n    // window.localStorage.setItem(LoginLocalStorageKey.EmailOrUserName, values.email) // Save for resend email\n    dispatch(startLogin(values.email, values.password));\n  }\n\n  return /*#__PURE__*/_jsxDEV(BackgroundContainer, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"Sign in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(StyledCard, {\n        children: [loginState.error && /*#__PURE__*/_jsxDEV(StyledNotification, {\n          title: loginState.error.message,\n          hideCloseButton: true,\n          icon: \"error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 7\n        }, this), loginState.isLoginSuccess && /*#__PURE__*/_jsxDEV(StyledNotification, {\n          title: \"Login successful. Redirecting...\",\n          hideCloseButton: true,\n          icon: \"success\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: initialValues,\n          validationSchema: validateSchema,\n          onSubmit: onSubmit,\n          children: ({\n            errors,\n            touched\n          }) => /*#__PURE__*/_jsxDEV(StyledForm, {\n            children: [/*#__PURE__*/_jsxDEV(Field, {\n              name: \"email\",\n              label: \"Email\",\n              as: StyledInput,\n              icon: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faUser\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 16\n              }, this),\n              error: errors.email && touched.email ? errors.email : null,\n              placeholder: \"Enter email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              name: \"password\",\n              label: \"Password\",\n              as: StyledInput,\n              icon: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faLock\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 16\n              }, this),\n              type: \"password\",\n              error: errors.password && touched.password ? errors.password : null,\n              placeholder: \"Enter password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(ButtonContainer, {\n              children: /*#__PURE__*/_jsxDEV(StyledButton, {\n                type: \"submit\",\n                label: \"Sign In\",\n                variant: \"brand\",\n                disabled: loginState.isLoading\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 3\n  }, this);\n};\n\n_s(LoginForm, \"wLOb1Dlom+cANNH7todorNaD890=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/minhho3199/Documents/Code/bloggr/client/src/components/LoginForm/LoginForm.jsx"],"names":["React","useEffect","useSelector","useDispatch","Redirect","useStyles","Yup","Field","Formik","Form","faLock","faUser","FontAwesomeIcon","BackgroundContainer","ButtonContainer","Container","NotificationContainer","ResendButton","StyledButton","StyledCard","StyledForm","StyledInput","StyledLink","StyledNotification","Title","startLogin","LoginForm","loginState","state","dispatch","localStorage","initialValues","email","password","validateSchema","object","string","required","onSubmit","values","error","message","isLoginSuccess","errors","touched","isLoading"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { Redirect } from \"react-router-dom\";\nimport useStyles from \"./styles\";\nimport * as Yup from \"yup\";\nimport { Field, Formik, Form } from \"formik\";\nimport { faLock, faUser } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n\tBackgroundContainer,\n\tButtonContainer,\n\tContainer,\n\tNotificationContainer,\n\tResendButton,\n\tStyledButton,\n\tStyledCard,\n\tStyledForm,\n\tStyledInput,\n\tStyledLink,\n\tStyledNotification,\n\tTitle\n} from \"./styles\";\nimport { startLogin } from './loginSlice';\n\n\n\n\nconst LoginForm = () => {\n\t// const classes = useStyles();\n\tconst loginState = useSelector(state => state.loginState);\n\tconst dispatch = useDispatch();\n\n\tif (\"usertoken\" in localStorage) {\n\t\treturn <Redirect to=\"/home\" />;\n\t}\n\t// useEffect(() => {\n\t//     dispatch(resetLoginState());\n\t//   }, [dispatch]);    \n\tconst initialValues = {\n\t\temail: \"\",\n\t\tpassword: \"\",\n\t}\n\n\tconst validateSchema = Yup.object({\n\t\temail: Yup.string().email(\"Invalid email format\").required(\"Email is required\"),\n\t\tpassword: Yup.string().required(\"Password is required\")\n\t});\n\tfunction onSubmit(values) {\n    // window.localStorage.setItem(LoginLocalStorageKey.EmailOrUserName, values.email) // Save for resend email\n\t\tdispatch(startLogin(values.email, values.password));\n  }\n\treturn (\n\t\t<BackgroundContainer>\n\t\t\t<Container>\n\t\t\t\t<Title>Sign in</Title>\n\t\t\t\t<StyledCard>\n\t\t\t\t\t{loginState.error && (\n\t\t\t\t\t\t<StyledNotification title={loginState.error.message} hideCloseButton={true} icon=\"error\" />\n\t\t\t\t\t)}\n\t\t\t\t\t{loginState.isLoginSuccess && (\n\t\t\t\t\t\t<StyledNotification title=\"Login successful. Redirecting...\" hideCloseButton={true} icon=\"success\" />\n\t\t\t\t\t)}\n\n\t\t\t\t\t<Formik initialValues={initialValues} validationSchema={validateSchema} onSubmit={onSubmit}>\n\t\t\t\t\t\t{({ errors, touched }) => (\n\t\t\t\t\t\t\t<StyledForm>\n\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\tlabel=\"Email\"\n\t\t\t\t\t\t\t\t\tas={StyledInput}\n\t\t\t\t\t\t\t\t\ticon={<FontAwesomeIcon icon={faUser} />}\n\t\t\t\t\t\t\t\t\terror={errors.email && touched.email ? errors.email : null}\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter email\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\t\t\t\tas={StyledInput}\n\t\t\t\t\t\t\t\t\ticon={<FontAwesomeIcon icon={faLock} />}\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\terror={errors.password && touched.password ? errors.password : null}\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter password\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<ButtonContainer>\n\t\t\t\t\t\t\t\t\t<StyledButton type=\"submit\" label=\"Sign In\" variant=\"brand\" disabled={loginState.isLoading} />\n\t\t\t\t\t\t\t\t</ButtonContainer>\n\t\t\t\t\t\t\t</StyledForm>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Formik>\n\t\t\t\t</StyledCard>\n\t\t\t</Container>\n\t\t</BackgroundContainer>\n\t);\n}\n\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}