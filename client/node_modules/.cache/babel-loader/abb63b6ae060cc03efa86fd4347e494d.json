{"ast":null,"code":"import { call, put } from \"redux-saga/effects\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { createBrowserHistory } from \"history\";\nconst initialState = {\n  isLoading: false,\n  isLoginSuccess: false,\n  error: undefined\n};\nconst loginSlice = createSlice({\n  name: \"Login\",\n  initialState,\n  reducers: {\n    loginStart(state) {\n      state.isLoading = true;\n    },\n\n    loginSuccess(state) {\n      state.isLoading = false;\n      state.isLoginSuccess = true;\n    },\n\n    loginFailed(state, action) {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n\n    resetLoginState(state) {\n      state.error = undefined;\n    }\n\n  }\n});\nexport default loginSlice.reducer;\nexport const {\n  loginStart,\n  loginSuccess,\n  loginFailed,\n  resetLoginState\n} = loginSlice.actions;\nexport function* startLogin(action) {\n  try {\n    const {\n      email,\n      password\n    } = action.payload;\n    const response = yield call(axios.post, \"/users/login\", {\n      email,\n      password\n    });\n    console.log(response);\n\n    if (response.message) {\n      yield put(loginFailed(response.message));\n    }\n\n    yield put(loginSuccess);\n    localStorage.setItem(\"usertoken\", response.data);\n    createBrowserHistory().push(\"/home\");\n  } catch (e) {// console.log(e);\n    // yield put(loginFailed(e));\n  }\n}","map":{"version":3,"sources":["/Users/minhho3199/Documents/Code/bloggr/client/src/components/LoginForm/loginSlice.js"],"names":["call","put","createSlice","axios","createBrowserHistory","initialState","isLoading","isLoginSuccess","error","undefined","loginSlice","name","reducers","loginStart","state","loginSuccess","loginFailed","action","payload","resetLoginState","reducer","actions","startLogin","email","password","response","post","console","log","message","localStorage","setItem","data","push","e"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,QAA0B,oBAA1B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,oBAAT,QAAqC,SAArC;AAEA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,SAAS,EAAE,KADS;AAEpBC,EAAAA,cAAc,EAAE,KAFI;AAGpBC,EAAAA,KAAK,EAAEC;AAHa,CAArB;AAMA,MAAMC,UAAU,GAAGR,WAAW,CAAC;AAC9BS,EAAAA,IAAI,EAAE,OADwB;AAE9BN,EAAAA,YAF8B;AAG9BO,EAAAA,QAAQ,EAAE;AACTC,IAAAA,UAAU,CAACC,KAAD,EAAQ;AACjBA,MAAAA,KAAK,CAACR,SAAN,GAAkB,IAAlB;AACA,KAHQ;;AAITS,IAAAA,YAAY,CAACD,KAAD,EAAQ;AACnBA,MAAAA,KAAK,CAACR,SAAN,GAAkB,KAAlB;AACAQ,MAAAA,KAAK,CAACP,cAAN,GAAuB,IAAvB;AACA,KAPQ;;AAQTS,IAAAA,WAAW,CAACF,KAAD,EAAQG,MAAR,EAAgB;AAC1BH,MAAAA,KAAK,CAACR,SAAN,GAAkB,KAAlB;AACAQ,MAAAA,KAAK,CAACN,KAAN,GAAcS,MAAM,CAACC,OAArB;AACA,KAXQ;;AAYTC,IAAAA,eAAe,CAACL,KAAD,EAAQ;AACtBA,MAAAA,KAAK,CAACN,KAAN,GAAcC,SAAd;AACA;;AAdQ;AAHoB,CAAD,CAA9B;AAqBA,eAAeC,UAAU,CAACU,OAA1B;AACA,OAAO,MAAM;AACZP,EAAAA,UADY;AAEZE,EAAAA,YAFY;AAGZC,EAAAA,WAHY;AAIZG,EAAAA;AAJY,IAKTT,UAAU,CAACW,OALR;AAOP,OAAO,UAAUC,UAAV,CAAqBL,MAArB,EAA6B;AACnC,MAAI;AACH,UAAM;AAACM,MAAAA,KAAD;AAAQC,MAAAA;AAAR,QAAoBP,MAAM,CAACC,OAAjC;AACA,UAAMO,QAAQ,GAAG,MAAMzB,IAAI,CAACG,KAAK,CAACuB,IAAP,EAAa,cAAb,EAA6B;AAACH,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAA7B,CAA3B;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;;AACA,QAAGA,QAAQ,CAACI,OAAZ,EAAqB;AACpB,YAAM5B,GAAG,CAACe,WAAW,CAACS,QAAQ,CAACI,OAAV,CAAZ,CAAT;AACA;;AACD,UAAM5B,GAAG,CAACc,YAAD,CAAT;AACAe,IAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCN,QAAQ,CAACO,IAA3C;AACA5B,IAAAA,oBAAoB,GAAG6B,IAAvB,CAA4B,OAA5B;AACA,GAVD,CAUE,OAAOC,CAAP,EAAU,CACX;AACA;AACA;AACD","sourcesContent":["import { call, put } from \"redux-saga/effects\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { createBrowserHistory } from \"history\";\n\nconst initialState = {\n\tisLoading: false,\n\tisLoginSuccess: false,\n\terror: undefined,\n}\n\nconst loginSlice = createSlice({\n\tname: \"Login\",\n\tinitialState,\n\treducers: {\n\t\tloginStart(state) {\n\t\t\tstate.isLoading = true\n\t\t},\n\t\tloginSuccess(state) {\n\t\t\tstate.isLoading = false;\n\t\t\tstate.isLoginSuccess = true;\n\t\t},\n\t\tloginFailed(state, action) {\n\t\t\tstate.isLoading = false;\n\t\t\tstate.error = action.payload;\n\t\t},\n\t\tresetLoginState(state) {\n\t\t\tstate.error = undefined;\n\t\t}\n\t}\n});\n\nexport default loginSlice.reducer;\nexport const {\n\tloginStart,\n\tloginSuccess,\n\tloginFailed,\n\tresetLoginState\n} = loginSlice.actions;\n\nexport function* startLogin(action) {\n\ttry {\n\t\tconst {email, password} = action.payload;\n\t\tconst response = yield call(axios.post, \"/users/login\", {email, password});\n\t\tconsole.log(response);\n\t\tif(response.message) {\n\t\t\tyield put(loginFailed(response.message));\n\t\t}\n\t\tyield put(loginSuccess);\n\t\tlocalStorage.setItem(\"usertoken\", response.data);\n\t\tcreateBrowserHistory().push(\"/home\");\n\t} catch (e) {\n\t\t// console.log(e);\n\t\t// yield put(loginFailed(e));\n\t}\n}"]},"metadata":{},"sourceType":"module"}