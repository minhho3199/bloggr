{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = buildPlainListFromTree;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _getNodeName = _interopRequireDefault(require(\"./getNodeName\"));\n\nvar _getNodeLevel = _interopRequireDefault(require(\"./getNodeLevel\"));\n\nfunction buildPlainListFromTree(tree, parentName, parentPath) {\n  return tree.reduce(function (result, node, index) {\n    var nodeName = (0, _getNodeName[\"default\"])({\n      parentName: parentName,\n      index: index\n    });\n    var level = (0, _getNodeLevel[\"default\"])({\n      name: nodeName\n    });\n    var nodePath = parentPath ? [].concat((0, _toConsumableArray2[\"default\"])(parentPath), [index]) : [index];\n\n    if (node.isExpanded) {\n      return [].concat((0, _toConsumableArray2[\"default\"])(result), [{\n        name: nodeName,\n        label: node.label.toLowerCase(),\n        level: level,\n        nodePath: nodePath,\n        isExpanded: node.isExpanded,\n        hasChildren: node.children && node.children.length > 0\n      }], (0, _toConsumableArray2[\"default\"])(buildPlainListFromTree(node.children, nodeName, nodePath)));\n    }\n\n    return [].concat((0, _toConsumableArray2[\"default\"])(result), [{\n      name: nodeName,\n      label: node.label.toLowerCase(),\n      level: level,\n      nodePath: nodePath,\n      isExpanded: node.isExpanded,\n      hasChildren: node.children && node.children.length > 0\n    }]);\n  }, []);\n}","map":{"version":3,"sources":["/Users/minhho3199/Documents/Code/bloggr/client/node_modules/react-rainbow-components/components/Tree/helpers/buildPlainListFromTree.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","buildPlainListFromTree","_toConsumableArray2","_getNodeName","_getNodeLevel","tree","parentName","parentPath","reduce","result","node","index","nodeName","level","name","nodePath","concat","isExpanded","label","toLowerCase","hasChildren","children","length"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAAC,SAAD,CAAP,GAAqBE,sBAArB;;AAEA,IAAIC,mBAAmB,GAAGP,sBAAsB,CAACC,OAAO,CAAC,0CAAD,CAAR,CAAhD;;AAEA,IAAIO,YAAY,GAAGR,sBAAsB,CAACC,OAAO,CAAC,eAAD,CAAR,CAAzC;;AAEA,IAAIQ,aAAa,GAAGT,sBAAsB,CAACC,OAAO,CAAC,gBAAD,CAAR,CAA1C;;AAEA,SAASK,sBAAT,CAAgCI,IAAhC,EAAsCC,UAAtC,EAAkDC,UAAlD,EAA8D;AAC5D,SAAOF,IAAI,CAACG,MAAL,CAAY,UAAUC,MAAV,EAAkBC,IAAlB,EAAwBC,KAAxB,EAA+B;AAChD,QAAIC,QAAQ,GAAG,CAAC,GAAGT,YAAY,CAAC,SAAD,CAAhB,EAA6B;AAC1CG,MAAAA,UAAU,EAAEA,UAD8B;AAE1CK,MAAAA,KAAK,EAAEA;AAFmC,KAA7B,CAAf;AAIA,QAAIE,KAAK,GAAG,CAAC,GAAGT,aAAa,CAAC,SAAD,CAAjB,EAA8B;AACxCU,MAAAA,IAAI,EAAEF;AADkC,KAA9B,CAAZ;AAGA,QAAIG,QAAQ,GAAGR,UAAU,GAAG,GAAGS,MAAH,CAAU,CAAC,GAAGd,mBAAmB,CAAC,SAAD,CAAvB,EAAoCK,UAApC,CAAV,EAA2D,CAACI,KAAD,CAA3D,CAAH,GAAyE,CAACA,KAAD,CAAlG;;AAEA,QAAID,IAAI,CAACO,UAAT,EAAqB;AACnB,aAAO,GAAGD,MAAH,CAAU,CAAC,GAAGd,mBAAmB,CAAC,SAAD,CAAvB,EAAoCO,MAApC,CAAV,EAAuD,CAAC;AAC7DK,QAAAA,IAAI,EAAEF,QADuD;AAE7DM,QAAAA,KAAK,EAAER,IAAI,CAACQ,KAAL,CAAWC,WAAX,EAFsD;AAG7DN,QAAAA,KAAK,EAAEA,KAHsD;AAI7DE,QAAAA,QAAQ,EAAEA,QAJmD;AAK7DE,QAAAA,UAAU,EAAEP,IAAI,CAACO,UAL4C;AAM7DG,QAAAA,WAAW,EAAEV,IAAI,CAACW,QAAL,IAAiBX,IAAI,CAACW,QAAL,CAAcC,MAAd,GAAuB;AANQ,OAAD,CAAvD,EAOH,CAAC,GAAGpB,mBAAmB,CAAC,SAAD,CAAvB,EAAoCD,sBAAsB,CAACS,IAAI,CAACW,QAAN,EAAgBT,QAAhB,EAA0BG,QAA1B,CAA1D,CAPG,CAAP;AAQD;;AAED,WAAO,GAAGC,MAAH,CAAU,CAAC,GAAGd,mBAAmB,CAAC,SAAD,CAAvB,EAAoCO,MAApC,CAAV,EAAuD,CAAC;AAC7DK,MAAAA,IAAI,EAAEF,QADuD;AAE7DM,MAAAA,KAAK,EAAER,IAAI,CAACQ,KAAL,CAAWC,WAAX,EAFsD;AAG7DN,MAAAA,KAAK,EAAEA,KAHsD;AAI7DE,MAAAA,QAAQ,EAAEA,QAJmD;AAK7DE,MAAAA,UAAU,EAAEP,IAAI,CAACO,UAL4C;AAM7DG,MAAAA,WAAW,EAAEV,IAAI,CAACW,QAAL,IAAiBX,IAAI,CAACW,QAAL,CAAcC,MAAd,GAAuB;AANQ,KAAD,CAAvD,CAAP;AAQD,GA7BM,EA6BJ,EA7BI,CAAP;AA8BD","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = buildPlainListFromTree;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _getNodeName = _interopRequireDefault(require(\"./getNodeName\"));\n\nvar _getNodeLevel = _interopRequireDefault(require(\"./getNodeLevel\"));\n\nfunction buildPlainListFromTree(tree, parentName, parentPath) {\n  return tree.reduce(function (result, node, index) {\n    var nodeName = (0, _getNodeName[\"default\"])({\n      parentName: parentName,\n      index: index\n    });\n    var level = (0, _getNodeLevel[\"default\"])({\n      name: nodeName\n    });\n    var nodePath = parentPath ? [].concat((0, _toConsumableArray2[\"default\"])(parentPath), [index]) : [index];\n\n    if (node.isExpanded) {\n      return [].concat((0, _toConsumableArray2[\"default\"])(result), [{\n        name: nodeName,\n        label: node.label.toLowerCase(),\n        level: level,\n        nodePath: nodePath,\n        isExpanded: node.isExpanded,\n        hasChildren: node.children && node.children.length > 0\n      }], (0, _toConsumableArray2[\"default\"])(buildPlainListFromTree(node.children, nodeName, nodePath)));\n    }\n\n    return [].concat((0, _toConsumableArray2[\"default\"])(result), [{\n      name: nodeName,\n      label: node.label.toLowerCase(),\n      level: level,\n      nodePath: nodePath,\n      isExpanded: node.isExpanded,\n      hasChildren: node.children && node.children.length > 0\n    }]);\n  }, []);\n}"]},"metadata":{},"sourceType":"script"}