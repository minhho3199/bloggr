{"ast":null,"code":"var _jsxFileName = \"/Users/minhho3199/Documents/Code/bloggr/client/src/components/LoginForm/LoginForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { resetLoginState } from './loginSlice';\nimport { Redirect } from \"react-router-dom\";\nimport useStyles from \"./styles\"; // import { Container, Input, Typography, Button } from '@material-ui/core';\n\nimport * as Yup from \"yup\";\nimport { Field, Formik, Form } from \"formik\";\nimport styled from \"styled-components\";\nimport { BackgroundContainer, ButtonContainer, Container, NotificationContainer, ResendButton, StyledButton, StyledCard, StyledForm, StyledGoogleIcon, StyledInput, StyledLink, StyledNotification, Title } from \"./styles\";\nimport { faLock, faUser } from \"@fortawesome/free-solid-svg-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginForm = () => {\n  _s();\n\n  // const classes = useStyles();\n  const loginState = useSelector(state => state.loginState);\n  const dispatch = useDispatch();\n\n  if (\"usertoken\" in localStorage) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 10\n    }, this);\n  } // useEffect(() => {\n  //     dispatch(resetLoginState());\n  //   }, [dispatch]);    \n\n\n  const initialValues = {\n    email: \"\",\n    password: \"\"\n  };\n  const validateSchema = Yup.object({\n    email: Yup.lazy(value => /\\@/.test(value) ? Yup.string().email(\"Invalid email\").required(\"This field is required\") : Yup.string().required(\"This field is required\")),\n    password: Yup.string().required(\"Password is required\")\n  });\n  return /*#__PURE__*/_jsxDEV(BackgroundContainer, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"Sign in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(StyledCard, {\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: initialValues,\n          validationSchema: validateSchema,\n          onSubmit: onSubmit,\n          children: ({\n            errors,\n            touched\n          }) => /*#__PURE__*/_jsxDEV(StyledForm, {\n            children: [/*#__PURE__*/_jsxDEV(Field, {\n              name: \"email\",\n              label: \"Email\",\n              as: StyledInput,\n              icon: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faUser\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 16\n              }, this),\n              error: errors.email && touched.email ? errors.email : null,\n              placeholder: \"Enter email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              name: \"password\",\n              label: \"Password\",\n              as: StyledInput,\n              icon: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faLock\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 16\n              }, this),\n              type: \"password\",\n              error: errors.password && touched.password ? errors.password : null,\n              placeholder: \"Enter password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(ButtonContainer, {\n              children: /*#__PURE__*/_jsxDEV(StyledButton, {\n                type: \"submit\",\n                label: \"Sign In\",\n                variant: \"brand\",\n                disabled: loginState.isLoading\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 3\n  }, this);\n};\n\n_s(LoginForm, \"wLOb1Dlom+cANNH7todorNaD890=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/minhho3199/Documents/Code/bloggr/client/src/components/LoginForm/LoginForm.jsx"],"names":["React","useEffect","useSelector","useDispatch","resetLoginState","Redirect","useStyles","Yup","Field","Formik","Form","styled","BackgroundContainer","ButtonContainer","Container","NotificationContainer","ResendButton","StyledButton","StyledCard","StyledForm","StyledGoogleIcon","StyledInput","StyledLink","StyledNotification","Title","faLock","faUser","LoginForm","loginState","state","dispatch","localStorage","initialValues","email","password","validateSchema","object","lazy","value","test","string","required","onSubmit","errors","touched","isLoading"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,eAAT,QAAgC,cAAhC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,SAAP,MAAsB,UAAtB,C,CACA;;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,IAAxB,QAAoC,QAApC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SACCC,mBADD,EAECC,eAFD,EAGCC,SAHD,EAICC,qBAJD,EAKCC,YALD,EAMCC,YAND,EAOCC,UAPD,EAQCC,UARD,EASCC,gBATD,EAUCC,WAVD,EAWCC,UAXD,EAYCC,kBAZD,EAaCC,KAbD,QAcO,UAdP;AAeA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,mCAA/B;;;AAGA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACvB;AACA,QAAMC,UAAU,GAAG1B,WAAW,CAAC2B,KAAK,IAAIA,KAAK,CAACD,UAAhB,CAA9B;AACA,QAAME,QAAQ,GAAG3B,WAAW,EAA5B;;AAEA,MAAI,eAAe4B,YAAnB,EAAiC;AAChC,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACA,GAPsB,CAQvB;AACA;AACA;;;AACA,QAAMC,aAAa,GAAG;AACrBC,IAAAA,KAAK,EAAE,EADc;AAErBC,IAAAA,QAAQ,EAAE;AAFW,GAAtB;AAKA,QAAMC,cAAc,GAAG5B,GAAG,CAAC6B,MAAJ,CAAW;AACjCH,IAAAA,KAAK,EAAE1B,GAAG,CAAC8B,IAAJ,CAAUC,KAAD,IACf,KAAKC,IAAL,CAAUD,KAAV,IACG/B,GAAG,CAACiC,MAAJ,GAAaP,KAAb,CAAmB,eAAnB,EAAoCQ,QAApC,CAA6C,wBAA7C,CADH,GAEGlC,GAAG,CAACiC,MAAJ,GAAaC,QAAb,CAAsB,wBAAtB,CAHG,CAD0B;AAMjCP,IAAAA,QAAQ,EAAE3B,GAAG,CAACiC,MAAJ,GAAaC,QAAb,CAAsB,sBAAtB;AANuB,GAAX,CAAvB;AAQA,sBACC,QAAC,mBAAD;AAAA,2BACC,QAAC,SAAD;AAAA,8BACC,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAGC,QAAC,UAAD;AAAA,+BASC,QAAC,MAAD;AAAQ,UAAA,aAAa,EAAET,aAAvB;AAAsC,UAAA,gBAAgB,EAAEG,cAAxD;AAAwE,UAAA,QAAQ,EAAEO,QAAlF;AAAA,oBACE,CAAC;AAAEC,YAAAA,MAAF;AAAUC,YAAAA;AAAV,WAAD,kBACA,QAAC,UAAD;AAAA,oCACC,QAAC,KAAD;AACC,cAAA,IAAI,EAAC,OADN;AAEC,cAAA,KAAK,EAAC,OAFP;AAGC,cAAA,EAAE,EAAEvB,WAHL;AAIC,cAAA,IAAI,eAAE,QAAC,eAAD;AAAiB,gBAAA,IAAI,EAAEK;AAAvB;AAAA;AAAA;AAAA;AAAA,sBAJP;AAKC,cAAA,KAAK,EAAEiB,MAAM,CAACV,KAAP,IAAgBW,OAAO,CAACX,KAAxB,GAAgCU,MAAM,CAACV,KAAvC,GAA+C,IALvD;AAMC,cAAA,WAAW,EAAC;AANb;AAAA;AAAA;AAAA;AAAA,oBADD,eASC,QAAC,KAAD;AACC,cAAA,IAAI,EAAC,UADN;AAEC,cAAA,KAAK,EAAC,UAFP;AAGC,cAAA,EAAE,EAAEZ,WAHL;AAIC,cAAA,IAAI,eAAE,QAAC,eAAD;AAAiB,gBAAA,IAAI,EAAEI;AAAvB;AAAA;AAAA;AAAA;AAAA,sBAJP;AAKC,cAAA,IAAI,EAAC,UALN;AAMC,cAAA,KAAK,EAAEkB,MAAM,CAACT,QAAP,IAAmBU,OAAO,CAACV,QAA3B,GAAsCS,MAAM,CAACT,QAA7C,GAAwD,IANhE;AAOC,cAAA,WAAW,EAAC;AAPb;AAAA;AAAA;AAAA;AAAA,oBATD,eAkBC,QAAC,eAAD;AAAA,qCACC,QAAC,YAAD;AAAc,gBAAA,IAAI,EAAC,QAAnB;AAA4B,gBAAA,KAAK,EAAC,SAAlC;AAA4C,gBAAA,OAAO,EAAC,OAApD;AAA4D,gBAAA,QAAQ,EAAEN,UAAU,CAACiB;AAAjF;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,oBAlBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA;AATD;AAAA;AAAA;AAAA;AAAA,cAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AA4CA,CApED;;GAAMlB,S;UAEczB,W,EACFC,W;;;KAHZwB,S;AAsEN,eAAeA,SAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { resetLoginState } from './loginSlice';\nimport { Redirect } from \"react-router-dom\";\nimport useStyles from \"./styles\";\n// import { Container, Input, Typography, Button } from '@material-ui/core';\nimport * as Yup from \"yup\";\nimport { Field, Formik, Form } from \"formik\";\nimport styled from \"styled-components\";\nimport {\n\tBackgroundContainer,\n\tButtonContainer,\n\tContainer,\n\tNotificationContainer,\n\tResendButton,\n\tStyledButton,\n\tStyledCard,\n\tStyledForm,\n\tStyledGoogleIcon,\n\tStyledInput,\n\tStyledLink,\n\tStyledNotification,\n\tTitle\n} from \"./styles\";\nimport { faLock, faUser } from \"@fortawesome/free-solid-svg-icons\";\n\n\nconst LoginForm = () => {\n\t// const classes = useStyles();\n\tconst loginState = useSelector(state => state.loginState);\n\tconst dispatch = useDispatch();\n\n\tif (\"usertoken\" in localStorage) {\n\t\treturn <Redirect to=\"/home\" />;\n\t}\n\t// useEffect(() => {\n\t//     dispatch(resetLoginState());\n\t//   }, [dispatch]);    \n\tconst initialValues = {\n\t\temail: \"\",\n\t\tpassword: \"\",\n\t}\n\n\tconst validateSchema = Yup.object({\n\t\temail: Yup.lazy((value) =>\n\t\t\t/\\@/.test(value)\n\t\t\t\t? Yup.string().email(\"Invalid email\").required(\"This field is required\")\n\t\t\t\t: Yup.string().required(\"This field is required\")\n\t\t),\n\t\tpassword: Yup.string().required(\"Password is required\")\n\t});\n\treturn (\n\t\t<BackgroundContainer>\n\t\t\t<Container>\n\t\t\t\t<Title>Sign in</Title>\n\n\t\t\t\t<StyledCard>\n\t\t\t\t\t{/* {loginState.error && loginState.error.type !== LoginError.EmailIsNotConfirmed && (\n\t\t\t\t\t\t<StyledNotification title={loginState.error.message} hideCloseButton={true} icon=\"error\" />\n\t\t\t\t\t)}\n\t\t\t\t\t{loginState.isLoginSuccess && (\n\t\t\t\t\t\t<StyledNotification title=\"Login successful. Redirecting...\" hideCloseButton={true} icon=\"success\" />\n\t\t\t\t\t)}\n\t\t\t\t\t{resendEmailSection} */}\n\n\t\t\t\t\t<Formik initialValues={initialValues} validationSchema={validateSchema} onSubmit={onSubmit}>\n\t\t\t\t\t\t{({ errors, touched }) => (\n\t\t\t\t\t\t\t<StyledForm>\n\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\tlabel=\"Email\"\n\t\t\t\t\t\t\t\t\tas={StyledInput}\n\t\t\t\t\t\t\t\t\ticon={<FontAwesomeIcon icon={faUser} />}\n\t\t\t\t\t\t\t\t\terror={errors.email && touched.email ? errors.email : null}\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter email\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\t\t\t\tas={StyledInput}\n\t\t\t\t\t\t\t\t\ticon={<FontAwesomeIcon icon={faLock} />}\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\terror={errors.password && touched.password ? errors.password : null}\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter password\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<ButtonContainer>\n\t\t\t\t\t\t\t\t\t<StyledButton type=\"submit\" label=\"Sign In\" variant=\"brand\" disabled={loginState.isLoading} />\n\t\t\t\t\t\t\t\t</ButtonContainer>\n\t\t\t\t\t\t\t</StyledForm>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Formik>\n\t\t\t\t</StyledCard>\n\t\t\t</Container>\n\t\t</BackgroundContainer>\n\t);\n}\n\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}