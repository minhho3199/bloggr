{"ast":null,"code":"var _jsxFileName = \"/Users/minhho3199/Documents/Code/bloggr/client/src/components/RegisterForm/RegisterForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport { Field, Formik } from \"formik\";\nimport { faLock, faUser } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { BackgroundContainer, ButtonContainer, Container, StyledButton, StyledCard, StyledForm, StyledInput, StyledLink, StyledNotification, Title } from \"./styles\";\nimport Navbar from '../Navbar/Navbar';\nimport { resetRegisterState } from './registerSlice';\nimport { createBrowserHistory } from \"history\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegisterForm = () => {\n  _s();\n\n  const registerState = useSelector(state => state.registerState);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (\"usertoken\" in localStorage) {\n      createBrowserHistory().push(\"/home\");\n    }\n\n    dispatch(resetRegisterState());\n  }, [dispatch]);\n  const initialValues = {\n    email: \"\",\n    name: \"\",\n    password: \"\",\n    passwordConfirmation: \"\"\n  };\n  const validateSchema = Yup.object({\n    email: Yup.string().email(\"Invalid email format\").required(\"Email is required\"),\n    name: Yup.string().required(\"Name is required\"),\n    password: Yup.string().required(\"Password is required\"),\n    passwordConfirmation: Yup.string().test('passwords-match', 'Passwords must match', function (value) {\n      return this.parent.password === value;\n    })\n  });\n\n  function onSubmit(values) {\n    const payload = {\n      email: values.email,\n      name: values.name,\n      password: values.password\n    };\n    dispatch(registerStart(payload));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BackgroundContainer, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(StyledCard, {\n          children: [registerState.error && /*#__PURE__*/_jsxDEV(StyledNotification, {\n            title: registerState.error.message,\n            hideCloseButton: true,\n            icon: \"error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), registerState.isRegisterSuccess && /*#__PURE__*/_jsxDEV(StyledNotification, {\n            title: \"Register successful. Redirecting...\",\n            hideCloseButton: true,\n            icon: \"success\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Title, {\n            children: \"Register For Bloggr\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Formik, {\n            initialValues: initialValues,\n            validationSchema: validateSchema,\n            onSubmit: onSubmit,\n            children: ({\n              errors,\n              touched\n            }) => /*#__PURE__*/_jsxDEV(StyledForm, {\n              children: [/*#__PURE__*/_jsxDEV(Field, {\n                name: \"email\",\n                label: \"Email\",\n                as: StyledInput,\n                icon: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faUser\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 27\n                }, this),\n                error: errors.email && touched.email ? errors.email : null,\n                placeholder: \"Enter email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                name: \"name\",\n                label: \"Name\",\n                as: StyledInput,\n                icon: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faUser\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 27\n                }, this),\n                error: errors.name && touched.name ? errors.name : null,\n                placeholder: \"Enter Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                name: \"password\",\n                label: \"Password\",\n                as: StyledInput,\n                icon: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faLock\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 27\n                }, this),\n                type: \"password\",\n                error: errors.password && touched.password ? errors.password : null,\n                placeholder: \"Enter password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                name: \"passwordConfirmation\",\n                label: \"Confirm Password\",\n                as: StyledInput,\n                icon: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faLock\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 27\n                }, this),\n                type: \"password\",\n                error: errors.passwordConfirmation && touched.passwordConfirmation ? errors.passwordConfirmation : null,\n                placeholder: \"Confirm Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ButtonContainer, {\n                children: [/*#__PURE__*/_jsxDEV(StyledButton, {\n                  type: \"submit\",\n                  label: \"Register\",\n                  variant: \"brand\",\n                  disabled: registerState.isLoading\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(StyledLink, {\n                  to: \"/\",\n                  children: /*#__PURE__*/_jsxDEV(StyledButton, {\n                    type: \"submit\",\n                    label: \"Cancel\",\n                    variant: \"neutral\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 114,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegisterForm, \"6liQY/ahcsk6Qay+FAVZAVmqxPE=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = RegisterForm;\nexport default RegisterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"sources":["/Users/minhho3199/Documents/Code/bloggr/client/src/components/RegisterForm/RegisterForm.jsx"],"names":["React","useEffect","useSelector","useDispatch","Link","Redirect","Yup","Field","Formik","faLock","faUser","FontAwesomeIcon","BackgroundContainer","ButtonContainer","Container","StyledButton","StyledCard","StyledForm","StyledInput","StyledLink","StyledNotification","Title","Navbar","resetRegisterState","createBrowserHistory","RegisterForm","registerState","state","dispatch","localStorage","push","initialValues","email","name","password","passwordConfirmation","validateSchema","object","string","required","test","value","parent","onSubmit","values","payload","registerStart","error","message","isRegisterSuccess","errors","touched","isLoading"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { Link, Redirect } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport { Field, Formik } from \"formik\";\nimport { faLock, faUser } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  BackgroundContainer,\n  ButtonContainer,\n  Container,\n  StyledButton,\n  StyledCard,\n  StyledForm,\n  StyledInput,\n  StyledLink,\n  StyledNotification,\n  Title\n} from \"./styles\";\nimport Navbar from '../Navbar/Navbar';\nimport { resetRegisterState } from './registerSlice';\nimport { createBrowserHistory } from \"history\";\n\nconst RegisterForm = () => {\n  const registerState = useSelector(state => state.registerState);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (\"usertoken\" in localStorage) {\n      createBrowserHistory().push(\"/home\");\n    }\n    dispatch(resetRegisterState());\n  }, [dispatch])\n\n  const initialValues = {\n    email: \"\",\n    name: \"\",\n    password: \"\",\n    passwordConfirmation: \"\"\n  }\n\n  const validateSchema = Yup.object({\n    email: Yup.string().email(\"Invalid email format\").required(\"Email is required\"),\n    name: Yup.string().required(\"Name is required\"),\n    password: Yup.string().required(\"Password is required\"),\n    passwordConfirmation: Yup.string()\n      .test('passwords-match', 'Passwords must match', function (value) {\n        return this.parent.password === value\n      })\n  })\n\n  function onSubmit(values) {\n    const payload = {\n      email: values.email,\n      name: values.name,\n      password: values.password\n    };\n    dispatch(registerStart(payload));\n  }\n\n  return (\n    <div>\n      <Navbar />\n      <BackgroundContainer>\n        <Container>\n          <StyledCard>\n            {registerState.error && (\n              <StyledNotification title={registerState.error.message} hideCloseButton={true} icon=\"error\" />\n            )}\n            {registerState.isRegisterSuccess && (\n              <StyledNotification title=\"Register successful. Redirecting...\" hideCloseButton={true} icon=\"success\" />\n            )}\n            <Title>Register For Bloggr</Title>\n            <Formik initialValues={initialValues} validationSchema={validateSchema} onSubmit={onSubmit}>\n              {({ errors, touched }) => (\n                <StyledForm>\n                  <Field\n                    name=\"email\"\n                    label=\"Email\"\n                    as={StyledInput}\n                    icon={<FontAwesomeIcon icon={faUser} />}\n                    error={errors.email && touched.email ? errors.email : null}\n                    placeholder=\"Enter email\"\n                  />\n                  <Field\n                    name=\"name\"\n                    label=\"Name\"\n                    as={StyledInput}\n                    icon={<FontAwesomeIcon icon={faUser} />}\n                    error={errors.name && touched.name ? errors.name : null}\n                    placeholder=\"Enter Name\"\n                  />\n                  <Field\n                    name=\"password\"\n                    label=\"Password\"\n                    as={StyledInput}\n                    icon={<FontAwesomeIcon icon={faLock} />}\n                    type=\"password\"\n                    error={errors.password && touched.password ? errors.password : null}\n                    placeholder=\"Enter password\"\n                  />\n                  <Field\n                    name=\"passwordConfirmation\"\n                    label=\"Confirm Password\"\n                    as={StyledInput}\n                    icon={<FontAwesomeIcon icon={faLock} />}\n                    type=\"password\"\n                    error={errors.passwordConfirmation && touched.passwordConfirmation ? errors.passwordConfirmation : null}\n                    placeholder=\"Confirm Password\"\n                  />\n                  <ButtonContainer>\n                    <StyledButton type=\"submit\" label=\"Register\" variant=\"brand\" disabled={registerState.isLoading} />\n                    <StyledLink to=\"/\">\n                      <StyledButton type=\"submit\" label=\"Cancel\" variant=\"neutral\" />\n                    </StyledLink>\n                  </ButtonContainer>\n                </StyledForm>\n              )}\n            </Formik>\n          </StyledCard>\n        </Container>\n      </BackgroundContainer>\n    </div>\n  );\n}\n\nexport default RegisterForm;"]},"metadata":{},"sourceType":"module"}