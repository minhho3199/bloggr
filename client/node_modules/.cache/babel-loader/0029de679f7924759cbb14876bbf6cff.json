{"ast":null,"code":"import { call, put } from \"redux-saga/effects\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { createBrowserHistory } from \"history\";\nconst initialState = {\n  isLoading: false,\n  isRegisterSuccess: false,\n  error: undefined\n};\nconst registerSlice = createSlice({\n  name: \"Register\",\n  initialState,\n  reducers: {\n    registerStart(state) {\n      state.isLoading = true;\n    },\n\n    registerSuccess(state) {\n      state.isLoading = false;\n      state.isRegisterSuccess = true;\n    },\n\n    registerFailed(state, action) {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n\n    resetRegisterState(state) {\n      state.error = undefined;\n    }\n\n  }\n});\nexport default registerSlice.reducer;\nexport const {\n  registerStart,\n  registerSuccess,\n  registerFailed,\n  resetRegisterState\n} = registerSlice.actions; // export function* startLogin(action) {\n// \ttry {\n// \t\tconst { email, password } = action.payload;\n// \t\tconst response = yield call(axios.post, \"/users/login\", { email, password });\n// \t\tyield put(loginSuccess);\n// \t\tlocalStorage.setItem(\"usertoken\", response.data);\n// \t\tcreateBrowserHistory().push(\"/home\");\n// \t} catch (e) {\n// \t\tif (e.response?.data) {\n// \t\t\tconsole.log(e.response.data);\n// \t\t\tyield put(loginFailed(e.response.data));\n// \t\t}\n// \t}\n// }","map":{"version":3,"sources":["/Users/minhho3199/Documents/Code/bloggr/client/src/components/RegisterForm/registerSlice.js"],"names":["call","put","createSlice","axios","createBrowserHistory","initialState","isLoading","isRegisterSuccess","error","undefined","registerSlice","name","reducers","registerStart","state","registerSuccess","registerFailed","action","payload","resetRegisterState","reducer","actions"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,QAA0B,oBAA1B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,oBAAT,QAAqC,SAArC;AAEA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,SAAS,EAAE,KADS;AAEpBC,EAAAA,iBAAiB,EAAE,KAFC;AAGpBC,EAAAA,KAAK,EAAEC;AAHa,CAArB;AAMA,MAAMC,aAAa,GAAGR,WAAW,CAAC;AACjCS,EAAAA,IAAI,EAAE,UAD2B;AAEjCN,EAAAA,YAFiC;AAGjCO,EAAAA,QAAQ,EAAE;AACTC,IAAAA,aAAa,CAACC,KAAD,EAAQ;AACpBA,MAAAA,KAAK,CAACR,SAAN,GAAkB,IAAlB;AACA,KAHQ;;AAITS,IAAAA,eAAe,CAACD,KAAD,EAAQ;AACtBA,MAAAA,KAAK,CAACR,SAAN,GAAkB,KAAlB;AACAQ,MAAAA,KAAK,CAACP,iBAAN,GAA0B,IAA1B;AACA,KAPQ;;AAQTS,IAAAA,cAAc,CAACF,KAAD,EAAQG,MAAR,EAAgB;AAC7BH,MAAAA,KAAK,CAACR,SAAN,GAAkB,KAAlB;AACAQ,MAAAA,KAAK,CAACN,KAAN,GAAcS,MAAM,CAACC,OAArB;AACA,KAXQ;;AAYTC,IAAAA,kBAAkB,CAACL,KAAD,EAAQ;AACzBA,MAAAA,KAAK,CAACN,KAAN,GAAcC,SAAd;AACA;;AAdQ;AAHuB,CAAD,CAAjC;AAqBA,eAAeC,aAAa,CAACU,OAA7B;AACA,OAAO,MAAM;AACZP,EAAAA,aADY;AAEZE,EAAAA,eAFY;AAGZC,EAAAA,cAHY;AAIZG,EAAAA;AAJY,IAKTT,aAAa,CAACW,OALX,C,CAOP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { call, put } from \"redux-saga/effects\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { createBrowserHistory } from \"history\";\n\nconst initialState = {\n\tisLoading: false,\n\tisRegisterSuccess: false,\n\terror: undefined,\n}\n\nconst registerSlice = createSlice({\n\tname: \"Register\",\n\tinitialState,\n\treducers: {\n\t\tregisterStart(state) {\n\t\t\tstate.isLoading = true\n\t\t},\n\t\tregisterSuccess(state) {\n\t\t\tstate.isLoading = false;\n\t\t\tstate.isRegisterSuccess = true;\n\t\t},\n\t\tregisterFailed(state, action) {\n\t\t\tstate.isLoading = false;\n\t\t\tstate.error = action.payload;\n\t\t},\n\t\tresetRegisterState(state) {\n\t\t\tstate.error = undefined;\n\t\t}\n\t}\n});\n\nexport default registerSlice.reducer;\nexport const {\n\tregisterStart,\n\tregisterSuccess,\n\tregisterFailed,\n\tresetRegisterState\n} = registerSlice.actions;\n\n// export function* startLogin(action) {\n// \ttry {\n// \t\tconst { email, password } = action.payload;\n// \t\tconst response = yield call(axios.post, \"/users/login\", { email, password });\n// \t\tyield put(loginSuccess);\n// \t\tlocalStorage.setItem(\"usertoken\", response.data);\n// \t\tcreateBrowserHistory().push(\"/home\");\n// \t} catch (e) {\n// \t\tif (e.response?.data) {\n// \t\t\tconsole.log(e.response.data);\n// \t\t\tyield put(loginFailed(e.response.data));\n// \t\t}\n// \t}\n// }"]},"metadata":{},"sourceType":"module"}